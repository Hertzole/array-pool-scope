name: Release Workflow

on:
  workflow_run:
    workflows: ["Test and Sync Unity Project"]
    branches: ["master"]
    types:
      - completed

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v3
        with:
          extra_plugins: |
            @semantic-release/exec
            @semantic-release/changelog
            @semantic-release/git
          branch: master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release Tag
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          git tag $TAG upm
          git push origin --tags
        env:
          TAG: package/v${{ steps.semantic.outputs.new_release_version }}
      
      - name: Go to master
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          git checkout master

      - name: Install .NET
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            5.x
            6.x
            7.x
            8.x

      - name: Add NuGet Source
        if: steps.semantic.outputs.new_release_published == 'true'
        run: dotnet nuget add source --username ${{ github.repository_owner }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"

      - name: Pack NuGet Package
        if: steps.semantic.outputs.new_release_published == 'true'
        run: dotnet pack -c Release -p:VERSION=${{ steps.semantic.outputs.new_release_version }} -o output

      - name: Publish to GitHub packages
        if: steps.semantic.outputs.new_release_published == 'true'
        run: dotnet nuget push output/*.nupkg --skip-duplicate --api-key ${{ secrets.GITHUB_TOKEN }} --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json

      - name: Publish to NuGet
        if: steps.semantic.outputs.new_release_published == 'true'
        run: dotnet nuget push output/*.nupkg --skip-duplicate --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
